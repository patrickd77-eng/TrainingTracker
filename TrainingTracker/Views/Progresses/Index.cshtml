@model IEnumerable<TrainingTracker.Models.Progress>


@{
    ViewData["Title"] = "Progress";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int completed = 0;
    int notComplete = 0;
    int total = 0;
}

<div class="jumbotron" style="text-align:center; padding:1em; margin:0;">
    <h1> @ViewData["EmployeeName"]'s Progress Records</h1>
    <a class="btn btn-lg btn-secondary" asp-controller="Employees" asp-action="Index">Back To Employee Dashboard </a>
    <hr />
    <div class="row">

        <div class="row" id="buttonsArea">
            <div class="col-sm-4">
                @* Many action links containing paramters that are used in the backend code,
                    such as the type of update (complete, incomplete) and target training category. *@
                <p>Update <b>all</b> of @ViewData["EmployeeName"]'s records.</p>
                <div class="mt-2">
                    @Html.ActionLink(
                 "Complete All Records", "MarkAllAsComplete", "Progresses",
                 new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"] },
                 new { @class = "btn btn-sm mb-1 btn-primary importantButton" })

                    @Html.ActionLink(
                "Incomplete All Records", "MarkAllAsIncomplete", "Progresses",
                new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"] },
                new { @class = "btn btn-sm mb-1 btn-danger importantButton" })
                </div>
            </div>
            <div class="col-sm-4">
                <div>
                    <p><b>Complete</b> a category for @ViewData["EmployeeName"].</p>
                    @Html.ActionLink(
                        "SSOW New Starter", "CategoryUpdate", "Progresses",
                        new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW New", updateType = "Complete" },
                        new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                    @Html.ActionLink(
                       "JollyDeck Essential", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Essential", updateType = "Complete" },
                       new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                    @Html.ActionLink(
                       "JollyDeck Optional", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Optional", updateType = "Complete" },
                       new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q1", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q1", updateType = "Complete" },
                       new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q2", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q2", updateType = "Complete" },
                       new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q3", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q3", updateType = "Complete" },
                       new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q4", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q4", updateType = "Complete" },
                       new { @class = "btn btn-sm mb-1 btn-success importantButton" })

                </div>
            </div>
            <div class="col-sm-4">
                <div>
                    <p>Mark a category <b>incomplete</b> for @ViewData["EmployeeName"].</p>
                    @Html.ActionLink(
                        "SSOW New Starter", "CategoryUpdate", "Progresses",
                        new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW New", updateType = "Incomplete" },
                        new { @class = "btn btn-sm mb-1 btn-danger importantButton" })

                    @Html.ActionLink(
                       "JollyDeck Essential", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Essential", updateType = "Incomplete" },
                       new { @class = "btn btn-sm mb-1 btn-danger importantButton" })

                    @Html.ActionLink(
                      "JollyDeck Optional", "CategoryUpdate", "Progresses",
                      new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Optional", updateType = "Incomplete" },
                      new { @class = "btn btn-sm mb-1 btn-danger importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q1", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q1", updateType = "Incomplete" },
                       new { @class = "btn btn-sm mb-1 btn-danger importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q2", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q2", updateType = "Incomplete" },
                       new { @class = "btn btn-sm mb-1 btn-danger importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q3", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q3", updateType = "Incomplete" },
                       new { @class = "btn btn-sm mb-1 btn-danger importantButton" })

                    @Html.ActionLink(
                       "SSOW Refresh Q4", "CategoryUpdate", "Progresses",
                       new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q4", updateType = "Incomplete" },
                       new { @class = "btn btn-sm mb-1 btn-danger importantButton" })
                </div>
            </div>
        </div>




        <hr />
    </div>
    <div class="row">

        <div class="col-lg-6 mx-auto text-center">
            <form asp-action="Index" method="get">
                <h5>Search Records</h5>
                <p>You can search by category or module name.</p>
                <small>Categories: SSOW New Starter, SSOW Refresh (Q1, Q2, Q3, Q4), JollyDeck Essential and JollyDeck Optional</small>
                <div class="form-group">
                    <input hidden name="employeeName" value="@ViewData["EmployeeName"]" />
                    <input class="w-100 form-control-sm mb-1 " placeholder="Fire Safety..." type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Search" class="btn btn-success btn-lg" />
                </div>
            </form>
        </div>
    </div>
    <hr />
    <h5 class="text-center">Scroll</h5>
    <partial name="_ScrollDown" />
</div>
<hr />
<div class="row">
    @* If no progress records, display an error message. This shouldn't happen, so will rarely if ever be seen. *@
    @if (!Model.Any())
    {
        <div class="text-center mx-auto">
            <h1 class="alert-danger">There are no progress records.</h1>
            <h4>Reasons for this</h4>
            <p>You may have searched for a non existent training module.</p>
            <p>There may be a system error</p>
            <p>
                If this is happening in error, (for example, you created a new employee
                and the employee doesn't have progress records automatically)
                then you can contact my creator for help.
            </p>
        </div>
    }
    else
    {
        @* For each progress record for the employee requested,
            establish a completed vs incompleted count
            and display the progress item as a bootstrap card. *@
        @foreach (var item in Model)
        {
            total++;

            if (item.Completed == true)
            {
                completed++;
            }
            if (item.Completed == false)
            {
                notComplete++;
            }
            <div class="col-sm-4">
                <ul class="list-group text-center ">
                    <li class="list-group-item mb-2">
                        <div class="text-center">
                            <h4>
                                @Html.DisplayFor(modelItem => item.Training.CategoryName)
                            </h4>
                            <h5>
                                @Html.DisplayFor(modelItem => item.Training.ModuleName)
                            </h5>
                        </div>
                        <span style="display:block;font-size:36px;">
                            <i class="
                           @(item.Completed ? "green fas fa-check-circle" : "red fas fa-times-circle")
                           "></i>
                        </span>
                        <a class="btn btn-primary fas fa-edit mt-2 text-center" asp-action="Edit" asp-route-id="@item.ProgressId"> Edit Progress </a>
                    </li>
                </ul>
            </div>

        }
        <div class="col-12 text-center">
            <h3>
                <i class="fas fa-info-circle"></i>
                @ViewData["EmployeeName"] has completed <span class="alert-primary"> @completed out of @total</span> of the displayed training modules.
            </h3>
        </div>
        <div class="mx-auto">
            <partial name="_ScrollUp" />
        </div>
    }
</div>
<script async defer src="~/js/scrollControls.js"></script>
<script>
    @* Inline JavaScript to reduce files required.
        Simply "are you sure" functionality for mass progress updates. *@
    var el = document.querySelectorAll('.importantButton');
    for (var i = 0; i < el.length; i++) {
        el[i].addEventListener('click', function (event) {
            if (confirm("Are you sure? \nThis will update multiple records for this employee.")) {
                console.log("Success");
                alert("Changes successful.")

            } else {
                event.preventDefault()
                console.log("Cancelled");
                alert("Changes cancelled.")
            }
        }, false);
    }
</script>
