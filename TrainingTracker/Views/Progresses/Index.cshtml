@model IEnumerable<TrainingTracker.Models.Progress>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int completed = 0;
    int notComplete = 0;
    int total = 0;
}
<div class="jumbotron" style="text-align:center; padding:1em; margin:0;">
    <h1> @ViewData["EmployeeName"]'s Progress Records</h1>
    <hr />
    <div class="row">
        <div class="col-sm-6">
            <h5>Actions</h5>
            <p id="popupWarning">These options are initially locked to prevent misclicks, because they can affect large amounts of progress records for @ViewData["EmployeeName"]. <span class="text-danger">Please proceed with caution.</span></p>
            <div id="openPopup">
                <button class="open btn btn-lg btn-outline-danger"><i class="fas fa-unlock-alt"></i> Unlock Actions</button>
            </div>
        </div>
        <div class="col-sm-6">
            <form asp-action="Index" method="get">
                <h5>Search Records</h5>
                <p>You can search by category or module name.</p>
                <small>Categories: SSOW New Starter, SSOW Refresh (Q1, Q2, Q3, Q4), Jollydeck Essential and JollyDeck Optional</small>
                <div class="form-group">
                    <input hidden name="employeeName" value="@ViewData["EmployeeName"]" />
                    <input class="w-100 form-control-sm mb-1 " placeholder="Fire Safety..." type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Search" class="btn btn-success btn-lg" />
                </div>
            </form>
        </div>
        <hr />
    </div>
    <hr />
    <p id="popupLockText">Actions Locked <i class="fas fa-lock"></i></p>
    <div id="popupContainer" style="height:0;" class="row popup-content">
        <div class="col-4">
            <div>
                <p>Update <b>all</b> of @ViewData["EmployeeName"]'s records.</p>
                <div class="btn-group-vertical mt-5">
                    @Html.ActionLink(
                 "Complete All Records", "MarkAllAsComplete", "Progresses",
                 new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"] },
                 new { @class = "btn btn-sm mb-1 btn-primary" })

                    @Html.ActionLink(
                "Uncomplete All Records", "MarkAllAsUncomplete", "Progresses",
                new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"] },
                new { @class = "btn btn-sm mb-1 btn-danger" })
                </div>
            </div>
        </div>
        <div class="col-4">
            <div class=" btn-group-vertical">
                <p><span class="text-success">Complete </span><b>a category</b> for @ViewData["EmployeeName"].</p>
                @Html.ActionLink(
                    "SSOW New Starter", "CategoryUpdate", "Progresses",
                    new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW New", updateType = "Complete" },
                    new { @class = "btn btn-sm mb-1 btn-outline-success" })

                @Html.ActionLink(
                   "JollyDeck Essential", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Essential", updateType = "Complete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-success" })

                @Html.ActionLink(
                   "JollyDeck Optional", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Optional", updateType = "Complete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-success" })

                @Html.ActionLink(
                   "SSOW Refresh Q1", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q1", updateType = "Complete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-success" })

                @Html.ActionLink(
                   "SSOW Refresh Q2", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q2", updateType = "Complete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-success" })

                @Html.ActionLink(
                   "SSOW Refresh Q3", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q3", updateType = "Complete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-success" })

                @Html.ActionLink(
                   "SSOW Refresh Q4", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q4", updateType = "Complete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-success" })

            </div>
        </div>
        <div class="col-4">
            <div class=" btn-group-vertical">
                <p><span class="text-danger">Uncomplete </span> <b>a category</b> for @ViewData["EmployeeName"].</p>
                @Html.ActionLink(
                    "SSOW New Starter", "CategoryUpdate", "Progresses",
                    new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW New", updateType = "Uncomplete" },
                    new { @class = "btn btn-sm mb-1 btn-outline-danger" })

                @Html.ActionLink(
                   "JollyDeck Essential", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Essential", updateType = "Uncomplete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-danger" })

                @Html.ActionLink(
                  "JollyDeck Optional", "CategoryUpdate", "Progresses",
                  new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "JollyDeck Optional", updateType = "Uncomplete" },
                  new { @class = "btn btn-sm mb-1 btn-outline-danger" })

                @Html.ActionLink(
                   "SSOW Refresh Q1", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q1", updateType = "Uncomplete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-danger" })

                @Html.ActionLink(
                   "SSOW Refresh Q2", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q2", updateType = "Uncomplete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-danger" })

                @Html.ActionLink(
                   "SSOW Refresh Q3", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q3", updateType = "Uncomplete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-danger" })

                @Html.ActionLink(
                   "SSOW Refresh Q4", "CategoryUpdate", "Progresses",
                   new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"], updateTarget = "SSOW Refresh Q4", updateType = "Uncomplete" },
                   new { @class = "btn btn-sm mb-1 btn-outline-danger" })
            </div>
        </div>
    </div>
    <hr />
    <h5 class="text-center">Scroll</h5>
    <partial name="_ScrollDown" />
</div>
<hr />
<div class="row">
    @if (!Model.Any())
    {
        <div class="text-center mx-auto">
            <h1 class="alert-danger">There are no progress records.</h1>
            <h4>Reasons for this</h4>
            <p>You may have searched for a non existent term</p>
            <p>There may be a system error</p>
            <p>
                If this is happening in error, (for example, you created a new employee
                and the employee doesn't have progress records automatically)
                then you can contact my creator for help.
            </p>
        </div>
    }
    else
    {
        @foreach (var item in Model)
        {
            total++;

            if (item.Completed == true)
            {
                completed++;
            }
            if (item.Completed == false)
            {
                notComplete++;
            }
            <div class="col-sm-4">
                <ul class="list-group text-center ">
                    <li class="list-group-item mb-2">
                        <div class="text-center">
                            <h4>
                                @Html.DisplayFor(modelItem => item.Training.CategoryName)
                            </h4>
                            <h5>
                                @Html.DisplayFor(modelItem => item.Training.ModuleName)
                            </h5>
                        </div>
                        <span style="display:block;font-size:36px;">
                            <i class="
                           @(item.Completed ? "green fas fa-check-circle" : "red fas fa-times-circle")
                           "></i>
                        </span>
                        <a class="btn btn-primary fas fa-edit mt-2 text-center" asp-action="Edit" asp-route-id="@item.ProgressId"> Edit Progress </a>
                    </li>
                </ul>
            </div>

        }
        <div class="col-12 text-center">
            <h3>
                <i class="fas fa-info-circle"></i>
                @ViewData["EmployeeName"] has completed <span class="alert-primary"> @completed out of @total</span> of the displayed training modules.
            </h3>
        </div>
        <div class="mx-auto">
            <partial name="_ScrollUp" />
        </div>
    }
</div>
