@model TrainingTracker.Models.Note

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <div class="jumbotron bg-light">
        <h1>Creating</h1>
        <h2>Note for @ViewData["EmployeeName"]</h2>
        <hr />
        <div class="row">
            <div class="col-6 mr-auto ml-auto">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <input asp-for="EmployeeId" id="employeeId" class="form-control" hidden name="employeeId" value="@ViewData["EmployeeId"]" />
                        <input id="employeeName" class="form-control" hidden name="employeeName" value="@ViewData["EmployeeName"]" />
                    </div>
                    <div class="form-group">
                        <label asp-for="NoteContent" class="control-label"></label>
                        <p class="text-danger">Notes are limited to 250 characters.</p>
                        <textarea asp-for="NoteContent" class="form-control"></textarea>
                        <span asp-validation-for="NoteContent" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-lg btn-success" />
                    </div>
                </form>
            </div>
        </div>
        <div>
            @Html.ActionLink(
             "Back to list", "Index", "Notes",
             new { id = @ViewData["EmployeeId"], employeeName = @ViewData["EmployeeName"] },
        new { @class = "btn btn-lg btn-outline-secondary mb-1" })
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
