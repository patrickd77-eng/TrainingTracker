@model PaginatedList<TrainingTracker.Models.Training>

@{
    ViewData["Title"] = "Training Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Training Content</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                Create Training Item
                <a asp-action="Create"><i class="btn btn-lg btn-success fas fa-plus-square"></i></a>
            </th>
            <th>
                <form asp-action="Index" method="get">
                    <div class="form-actions no-color">
                        Search Modules: <input placeholder="Fire Safety..." type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                        <input type="submit" value="Search" class="btn btn-info mt-1" />
                        <a asp-action="Index" class="btn btn-secondary mt-1">Reset List</a>
                    </div>
                </form>
            </th>
        </tr>
        <tr class="bg-light">
            <th>
                Category
            </th>
           
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Module</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModuleName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.TrainingId"><i class="btn  btn-primary fas fa-edit"></i></a>
                    <a asp-action="Delete" asp-route-id="@item.TrainingId"> <i class="btn btn-primary fas fa-trash"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var previousDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextPageDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-info @previousDisabled">
    <i class="fas fa-arrow-circle-left"></i>
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-info @nextPageDisabled">
    <i class="fas fa-arrow-circle-right"></i>
</a>
